input, .input-group{
    width: 100%;
    color: var(--color-text);
}

.input-group,
form > input{
    margin-bottom: 12px;
}

input:-webkit-autofill{
    color: var(--color-main);
    -webkit-box-shadow: inset 0 0 0px 9999px var(--color-background-2);
}

input[type=submit]{
    background-color: var(--color-main);
    color: var(--color-text-button);
    border: none;
    border-radius: 0.5rem;
    padding: 0.5rem;
}

input[type=submit]:hover {
    cursor: pointer;
    background-color: var(--color-background-1);
    color: var(--color-main);
}

input[type=text], input[type=password]{
    background-color: var(--color-background-2);
    border: 2px solid var(--color-background-1);
    border-radius: 0.5rem;
    padding: 0.5rem 0;
}

input:focus{
    box-shadow: 0 0 0.3rem var(--color-main);
    outline: none;
}

form label{
    font-weight: bold;
}

form label::after{
    content: ":";
}

button:not(.close){
    border: none;
    border-radius: var(--input-border-radius);
    background-color: var(--color-main);
    color: var(--color-text-button);
    padding: 8px 12px;
    cursor: pointer;

    font-size: 16px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    text-align: center;

    transition: 200ms ease;
    text-decoration: none;
}

button:not(.close):hover{
    border-color: var(--color-background-2);
    color: var(--color-main);
    background-color: var(--color-background-2);
}

/*Disable Round corners for Groups, and set constant height*/
.btn-group,
.input-group{
    display: flex;
    flex-wrap: nowrap;
    justify-content: space-between;
    height: 2.4rem;
}

/*
    Don't do borders if they are in a button group
*/
.btn-group .btn,
.input-group input,
.input-group *{
    border-radius: 0;
}

/*First element only left round corners*/
.btn-group *:first-child,
.input-group *:first-child{
    border-top-left-radius: var(--input-border-radius);
    border-bottom-left-radius: var(--input-border-radius);
}

/*Last element only right round corners*/
.btn-group .btn:last-child,
.input-group *:last-child{
    border-top-right-radius: var(--input-border-radius);
    border-bottom-right-radius: var(--input-border-radius);
}

/*------------------------------------------------------------------*/
/*                  Radio buttons in view Selection                 */
/*------------------------------------------------------------------*/
nav.side section.view label{
    display: grid;
    grid-template-columns: 24px auto;
    gap: var(--gap-default);

    font-size: 20px;

    margin-right: 1em;
    padding: var(--gap-default);
    border-top-right-radius: var(--gap-default);
    border-bottom-right-radius: var(--gap-default);
}

nav.side section.view label span{
    padding: 2px;
}

nav.side section.view img{
    height: 24px;
    width: 24px;
    object-fit: scale-down;
}

nav.side section.view input[type="radio"]{
    display: none;
}

nav.side section.view input:checked + label{
    background-color: var(--color-main);
    background-image: linear-gradient(transparent, var(--color-shine), transparent);
}

/*----------------*/
/*      Checkbox  */
/*----------------*/
input[type=checkbox].real-checkbox {
    display: none;
}

.check-container {
    display: block;
    position: relative;
    padding-left: 1.5rem;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox and radio buttons */
.check-container input,
.btn-group input[type=radio],
.image-button-group input[type=radio] {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkmark{
    position: absolute;
    top: 0;
    left: 0;
    height: 1rem;
    width: 1rem;
    margin: 0;
    border: 2px solid var(--color-main);
    border-radius: 0.2rem;
    background-color: var(--color-background-2);
}

/* On mouse-over, add a grey background color */
.check-container:hover input~.checkmark {
    background-color: var(--color-background-1);
}

/* When the checkbox is checked, add a blue background */
.check-container input:checked~.checkmark {
    background-color: var(--color-main);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.check-container input:checked~.checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.check-container .checkmark:after {
    left: 0.25rem;
    top: 0.01rem;
    width: 5px;
    height: 10px;
    border: solid var(--color-text-button);
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}
